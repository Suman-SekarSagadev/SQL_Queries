create database April14

use April14

select * from fact
select * from product
select * from location

--1) Display number of states present in location table?
select count(distinct State) as count_of_states from Location



--2) How many products are of regular type ?
select count(product) as no_of_regular from Product where Type='Regular'

select count(distinct product) as 'Regular Products' from product where type like 'regular'

---3) How much spending has been done on marketing of product id 1
select sum(Marketing) as Total_marketing from fact where productid=1

---4) What is the minimum sales of a product ?
select min(sales) as minimum_sales from fact

--5) Display max Cost of Good Sold(COGS). 
select max(COGS) AS maximum_cogs from fact

---6) Display the Details of the productid where product type is coffee
select * from product where Product_type='Coffee'

---7) Display the details where total_expenses is greater than 40. 
select * from fact where Total_Expenses>40 order by Total_Expenses

---8) What is the average sales in Area_Code 719 ?
select avg(sales) as average_sales from fact where area_code=719

---9) Find out the total profit generated by Colorado state. 
select sum(F.profit) as Colorado_profit from Fact F
inner join
Location L
on F.Area_code=L.area_code
group by L.state having L.state='Colorado'

select sum(profit) as Colorado_Total_Profit from fact f, location l where f.area_code = l.area_code and l.state like 'colorado'

---10) Display the average inventory for each product id.
select avg(Inventory) as Avg_Inventory from fact group by productid order by productid

---11) Display state in a sequential order in a location table.
select distinct state from location order by state desc

select distinct state from location order by state asc

---12) Display the average budget margin where average budget margin should be greater than 100
select avg(Budget_Margin) as Average_Budget, Productid from Fact
group by ProductId Having avg(Budget_Margin)>100

---13) What is the total sales done on date 2010-01-01
select sum(sales) as Total_sales from fact where date='2010-01-01'

---14) Display the average total expense of each product id on individual date
select date,productid, avg(total_expenses) from fact group by date,productid order by date,productid

---15) Display the table with the following attributes such as Date, productid, product_type, product, Sales, profit, state, area_code
select date,Fact.productid,product_type,product,sales,profit,state,Location.Area_code
from fact
inner join
location
on fact.area_code=location.area_code
inner join
product
on product.productid=fact.productid

----16) Display the rank without any gap to show the Sales wise rank. 
select date,productid,sales,profit,area_code, DENSE_RANK() over (order by sales asc) as sales_rank from fact

---17) Find the State wise Profit and Sales. 
select L.state, sum(F.profit) as profit, sum(F.sales) as sales from location L, fact F
where F.area_code=L.area_code group by L.state

---18) Find the State wise Profit and Sales along with the Product Name. 
select l.State, p.product, sum(profit) as Profit, sum(sales) as Sales from fact f
	inner join
	location l
	on f.area_code=l.area_code
	inner join
	product p
	on p.productid=f.productid
	group by l.state,p.product

---19) If there is an increase in sales of 5%. Calculate the increased sales. 
select sales, (sales * 1.05) as increased_sales from fact

---20) Find the maximum profit along with the Product id and Product Type.
select fact.productid,product.product_type,fact.profit from fact
inner join
product
on fact.productid=product.productid
where fact.profit=(select max(profit) from fact)

----21 Create a Stored Procedure to fetch the result according to the product type from Product
CREATE PROCEDURE [dbo].[GetProductByType] @Product_Type nvarchar(50) AS BEGIN
SELECT *
FROM Product WHERE Product_Type = 'Product_Type'
END

-----22 Write a query by creating a condition in which if the total expenses is less than 60 then it is a
profit or else loss

SELECT *,
CASE WHEN total_expenses < 60 THEN 'Profit' ELSE 'Loss' END AS 'Profit/Loss'
FROM fact

---23 Give the total weekly sales value with the Date and productid details. Use roll-up to pull the
data in hierarchical order

SELECT
    DATE_FORMAT(o.orderdate, '%Y-%m-%d') AS Date,
    p.product,
    SUM(od.quantity * od.unitprice) AS Total
FROM
    fact f
        INNER JOIN
    fact od ON f.orderid = od.orderid
        INNER JOIN
--24 Apply union and intersection operator on the tables which consist of attribute area cod
SELECT * FROM  fact f
union 
select * from product
union
select* from location



select * from fact
select * from product
select * from location


---25 Create a user-defined function for the product table to fetch a particular product type based

upon the user s preference
CREATE FUNCTION get_product_type(@product_type VARCHAR(50))
RETURNS @product_type_table TABLE (product_id INT, product_name VARCHAR(50), product_type VARCHAR(50), product_price INT)
AS
BEGIN
    INSERT INTO @product_type_table
    SELECT product
	